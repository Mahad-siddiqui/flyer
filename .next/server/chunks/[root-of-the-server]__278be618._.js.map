{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 74, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/DT/Documents/perfect/perfect/src/lib/prisma.ts"],"sourcesContent":["import { PrismaClient } from '@prisma/client'\n\nconst globalForPrisma = globalThis as unknown as {\n  prisma: PrismaClient | undefined\n}\n\nexport const prisma = globalForPrisma.prisma ?? new PrismaClient({\n  log: ['query'],\n})\n\nif (process.env.NODE_ENV !== 'production') globalForPrisma.prisma = prisma"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,kBAAkB;AAIjB,MAAM,SAAS,gBAAgB,MAAM,IAAI,IAAI,6HAAA,CAAA,eAAY,CAAC;IAC/D,KAAK;QAAC;KAAQ;AAChB;AAEA,wCAA2C,gBAAgB,MAAM,GAAG","debugId":null}},
    {"offset": {"line": 90, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/DT/Documents/perfect/perfect/src/app/api/templates/%5Bid%5D/route.ts"],"sourcesContent":["// src/app/api/templates/[id]/route.ts\nimport { NextRequest, NextResponse } from \"next/server\";\nimport { prisma } from \"@/lib/prisma\";\n\ninterface RouteParams {\n  params: {\n    id: string;\n  };\n}\n\nexport async function GET(request: NextRequest, { params }: RouteParams) {\n  try {\n    const template = await prisma.template.findUnique({\n      where: {\n        id: params.id,\n        isActive: true,\n      },\n    });\n\n    if (!template) {\n      return NextResponse.json(\n        { error: \"Template not found\" },\n        { status: 404 }\n      );\n    }\n\n    return NextResponse.json(template);\n  } catch (error) {\n    console.error(\"Error fetching template:\", error);\n    return NextResponse.json(\n      { error: \"Failed to fetch template\" },\n      { status: 500 }\n    );\n  }\n}\n\nexport async function PATCH(request: NextRequest, { params }: RouteParams) {\n  try {\n    const body = await request.json();\n    const {\n      name,\n      description,\n      htmlContent,\n      cssContent,\n      jsContent,\n      isActive,\n      isPremium,\n    } = body;\n\n    const template = await prisma.template.update({\n      where: {\n        id: params.id,\n      },\n      data: {\n        ...(name && { name }),\n        ...(description && { description }),\n        ...(htmlContent && { htmlContent }),\n        ...(cssContent && { cssContent }),\n        ...(jsContent !== undefined && { jsContent }),\n        ...(isActive !== undefined && { isActive }),\n        ...(isPremium !== undefined && { isPremium }),\n        updatedAt: new Date(),\n      },\n    });\n\n    return NextResponse.json(template);\n  } catch (error) {\n    console.error(\"Error updating template:\", error);\n    return NextResponse.json(\n      { error: \"Failed to update template\" },\n      { status: 500 }\n    );\n  }\n}\n"],"names":[],"mappings":"AAAA,sCAAsC;;;;;AACtC;AACA;;;AAQO,eAAe,IAAI,OAAoB,EAAE,EAAE,MAAM,EAAe;IACrE,IAAI;QACF,MAAM,WAAW,MAAM,sHAAA,CAAA,SAAM,CAAC,QAAQ,CAAC,UAAU,CAAC;YAChD,OAAO;gBACL,IAAI,OAAO,EAAE;gBACb,UAAU;YACZ;QACF;QAEA,IAAI,CAAC,UAAU;YACb,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAqB,GAC9B;gBAAE,QAAQ;YAAI;QAElB;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,4BAA4B;QAC1C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA2B,GACpC;YAAE,QAAQ;QAAI;IAElB;AACF;AAEO,eAAe,MAAM,OAAoB,EAAE,EAAE,MAAM,EAAe;IACvE,IAAI;QACF,MAAM,OAAO,MAAM,QAAQ,IAAI;QAC/B,MAAM,EACJ,IAAI,EACJ,WAAW,EACX,WAAW,EACX,UAAU,EACV,SAAS,EACT,QAAQ,EACR,SAAS,EACV,GAAG;QAEJ,MAAM,WAAW,MAAM,sHAAA,CAAA,SAAM,CAAC,QAAQ,CAAC,MAAM,CAAC;YAC5C,OAAO;gBACL,IAAI,OAAO,EAAE;YACf;YACA,MAAM;gBACJ,GAAI,QAAQ;oBAAE;gBAAK,CAAC;gBACpB,GAAI,eAAe;oBAAE;gBAAY,CAAC;gBAClC,GAAI,eAAe;oBAAE;gBAAY,CAAC;gBAClC,GAAI,cAAc;oBAAE;gBAAW,CAAC;gBAChC,GAAI,cAAc,aAAa;oBAAE;gBAAU,CAAC;gBAC5C,GAAI,aAAa,aAAa;oBAAE;gBAAS,CAAC;gBAC1C,GAAI,cAAc,aAAa;oBAAE;gBAAU,CAAC;gBAC5C,WAAW,IAAI;YACjB;QACF;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,4BAA4B;QAC1C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA4B,GACrC;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}