{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/DT/Documents/perfect/perfect/src/app/f/%5BshortUrl%5D/page.tsx"],"sourcesContent":["// // src/app/f/[shortUrl]/page.tsx\n// import { notFound } from 'next/navigation'\n// import { prisma } from '@/lib/prisma'\n// import { Metadata } from 'next'\n\n// interface PageProps {\n//     params: {\n//         shortUrl: string\n//     }\n// }\n\n// async function getFlyerByShortUrl(shortUrl: string) {\n//     try {\n//         const flyer = await prisma.flyer.findFirst({\n//             where: {\n//                 shortUrl,\n//                 isPublic: true\n//             },\n//             include: {\n//                 template: true,\n//                 user: {\n//                     select: {\n//                         name: true\n//                     }\n//                 }\n//             }\n//         })\n\n//         if (flyer) {\n//             // Increment view count\n//             await prisma.flyer.update({\n//                 where: { id: flyer.id },\n//                 data: { viewCount: { increment: 1 } }\n//             })\n//         }\n\n//         return flyer\n//     } catch (error) {\n//         console.error('Error fetching flyer:', error)\n//         return null\n//     }\n// }\n\n// export async function generateMetadata({ params }: PageProps): Promise<Metadata> {\n//     const flyer = await getFlyerByShortUrl(params.shortUrl)\n\n//     if (!flyer) {\n//         return {\n//             title: 'Flyer Not Found',\n//             description: 'The requested flyer could not be found.'\n//         }\n//     }\n\n//     const extractedData = flyer.extractedData as any\n//     const editableFields = flyer.editableFields as any\n\n//     const title = editableFields?.title || extractedData?.title || flyer.title || 'Flyer'\n//     const description = editableFields?.description || extractedData?.description || 'View this flyer'\n\n//     return {\n//         title,\n//         description,\n//         openGraph: {\n//             title,\n//             description,\n//             type: 'website',\n//         },\n//         twitter: {\n//             card: 'summary_large_image',\n//             title,\n//             description,\n//         }\n//     }\n// }\n\n// export default async function PublicFlyerPage({ params }: PageProps) {\n//     const flyer = await getFlyerByShortUrl(params.shortUrl)\n\n//     if (!flyer || !flyer.template) {\n//         notFound()\n//     }\n\n//     // Prepare the data for rendering\n//     const extractedData = flyer.extractedData as any\n//     const editableFields = flyer.editableFields as any || {}\n\n//     // Replace placeholders in template\n//     let html = flyer.template.htmlContent\n//     const css = flyer.template.cssContent\n//     const js = flyer.template.jsContent || ''\n\n//     const placeholders = {\n//         '{{title}}': editableFields.title || extractedData.title || 'Event Title',\n//         '{{description}}': editableFields.description || extractedData.description || 'Event description goes here...',\n//         '{{date}}': editableFields.date || extractedData.date || 'Date TBA',\n//         '{{time}}': editableFields.time || extractedData.time || 'Time TBA',\n//         '{{location}}': editableFields.location || extractedData.location || 'Location TBA',\n//         '{{address}}': editableFields.address || extractedData.address || '',\n//         '{{phone}}': editableFields.phone || extractedData.phone || '',\n//         '{{email}}': editableFields.email || extractedData.email || '',\n//         '{{website}}': editableFields.website || extractedData.website || '',\n//         '{{buttonText}}': editableFields.buttonText || 'Learn More',\n//         '{{buttonUrl}}': editableFields.buttonUrl || '#',\n//     }\n\n//     // Replace placeholders\n//     Object.entries(placeholders).forEach(([placeholder, value]) => {\n//         html = html.replace(new RegExp(placeholder, 'g'), value as string)\n//     })\n\n//     return (\n//         <html lang=\"en\">\n//             <head>\n//                 <meta charSet=\"UTF-8\" />\n//                 <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n//                 <style dangerouslySetInnerHTML={{\n//                     __html: `\n//             ${css}\n//             body { \n//               margin: 0; \n//               padding: 0; \n//               font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', sans-serif;\n//               min-height: 100vh;\n//               display: flex;\n//               align-items: center;\n//               justify-content: center;\n//               background: #f5f5f5;\n//             }\n//             .flyer-container {\n//               width: 100%;\n//               max-width: 500px;\n//               margin: 1rem;\n//             }\n//             .powered-by {\n//               text-align: center;\n//               margin-top: 1rem;\n//               padding: 0.5rem;\n//               font-size: 0.75rem;\n//               color: #666;\n//               background: rgba(255,255,255,0.8);\n//               border-radius: 4px;\n//             }\n//             .powered-by a {\n//               color: #3b82f6;\n//               text-decoration: none;\n//             }\n//             .powered-by a:hover {\n//               text-decoration: underline;\n//             }\n//           `\n//                 }} />\n//             </head>\n//             <body>\n//                 <div className=\"flyer-container\">\n//                     <div dangerouslySetInnerHTML={{ __html: html }} />\n//                     <div className=\"powered-by\">\n//                         Powered by <a href={process.env.NEXTAUTH_URL} target=\"_blank\" rel=\"noopener noreferrer\">FlyerWeb</a>\n//                     </div>\n//                 </div>\n//                 {js && (\n//                     <script dangerouslySetInnerHTML={{ __html: js }} />\n//                 )}\n//             </body>\n//         </html>\n//     )\n// }\n\n// src/app/f/[shortUrl]/page.tsx\nimport { prisma } from '@/lib/prisma'\nimport { Metadata } from 'next'\nimport { notFound } from 'next/navigation'\nimport QRCode from 'qrcode'\n\nasync function generateQRCodeDataUrl(url: string): Promise<string> {\n    try {\n        return await QRCode.toDataURL(url, {\n            width: 200,\n            margin: 2,\n            color: {\n                dark: '#000000',\n                light: '#ffffff'\n            }\n        })\n    } catch (error) {\n        console.error('Error generating QR code:', error)\n        return ''\n    }\n}\n\nasync function getFlyerByShortUrl(shortUrl: string) {\n    try {\n        const flyer = await prisma.flyer.findFirst({\n            where: {\n                shortUrl,\n                isPublic: true\n            },\n            include: {\n                template: true,\n                user: {\n                    select: {\n                        name: true\n                    }\n                }\n            }\n        })\n\n        if (flyer) {\n            // Generate and save QR code if it doesn't exist and we have a generatedUrl\n            if (!flyer.qrCodePath && flyer.generatedUrl) {\n                console.log('Generating QR code for:', flyer.generatedUrl)\n                const qrCodeDataUrl = await generateQRCodeDataUrl(flyer.generatedUrl)\n\n                if (qrCodeDataUrl) {\n                    console.log('Generated QR code, saving to database...')\n                    await prisma.flyer.update({\n                        where: { id: flyer.id },\n                        data: {\n                            qrCodePath: qrCodeDataUrl,\n                            viewCount: { increment: 1 }\n                        }\n                    })\n\n                    // Return updated flyer with QR code\n                    return await prisma.flyer.findFirst({\n                        where: { id: flyer.id },\n                        include: {\n                            template: true,\n                            user: {\n                                select: {\n                                    name: true\n                                }\n                            }\n                        }\n                    })\n                }\n            } else {\n                // Just increment view count if QR code already exists\n                await prisma.flyer.update({\n                    where: { id: flyer.id },\n                    data: { viewCount: { increment: 1 } }\n                })\n            }\n        }\n\n        return flyer\n    } catch (error) {\n        console.error('Error fetching flyer:', error)\n        return null\n    }\n}\n\ninterface PageProps {\n    params: {\n        shortUrl: string\n    }\n}\n\n// Rest of your code remains the same...\nexport async function generateMetadata({ params }: PageProps): Promise<Metadata> {\n    const flyer = await getFlyerByShortUrl(params.shortUrl)\n\n    if (!flyer) {\n        return {\n            title: 'Flyer Not Found',\n            description: 'The requested flyer could not be found.'\n        }\n    }\n\n    const extractedData = flyer.extractedData as any\n    const editableFields = flyer.editableFields as any\n\n    const title = editableFields?.title || extractedData?.title || flyer.title || 'Flyer'\n    const description = editableFields?.description || extractedData?.description || 'View this flyer'\n\n    return {\n        title,\n        description,\n        openGraph: {\n            title,\n            description,\n            type: 'website',\n        },\n        twitter: {\n            card: 'summary_large_image',\n            title,\n            description,\n        }\n    }\n}\n\nexport default async function PublicFlyerPage({ params }: PageProps) {\n\n    const flyer = await getFlyerByShortUrl(params.shortUrl)\n    console.log(\"flyer\", flyer)\n    if (!flyer || !flyer.template) {\n        notFound()\n    }\n\n\n\n\n    // Prepare the data for rendering\n    const extractedData = flyer.extractedData as any\n    const editableFields = flyer.editableFields as any || {}\n\n    // Replace placeholders in template\n    let html = flyer.template.htmlContent\n    const css = flyer.template.cssContent\n    const js = flyer.template.jsContent || ''\n\n    const placeholders = {\n        '{{title}}': editableFields.title || extractedData.title || 'Event Title',\n        '{{description}}': editableFields.description || extractedData.description || 'Event description goes here...',\n        '{{date}}': editableFields.date || extractedData.date || 'Date TBA',\n        '{{time}}': editableFields.time || extractedData.time || 'Time TBA',\n        '{{location}}': editableFields.location || extractedData.location || 'Location TBA',\n        '{{address}}': editableFields.address || extractedData.address || '',\n        '{{phone}}': editableFields.phone || extractedData.phone || '',\n        '{{email}}': editableFields.email || extractedData.email || '',\n        '{{website}}': editableFields.website || extractedData.website || '',\n        '{{buttonText}}': editableFields.buttonText || 'Learn More',\n        '{{buttonUrl}}': editableFields.buttonUrl || '#',\n        '{{qrCode}}': flyer.qrCodePath || ''\n    }\n\n    // Replace placeholders\n    Object.entries(placeholders).forEach(([placeholder, value]) => {\n        html = html.replace(new RegExp(placeholder, 'g'), value as string)\n    })\n\n    return (\n        <html lang=\"en\">\n            <head>\n                <meta charSet=\"UTF-8\" />\n                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n                <style dangerouslySetInnerHTML={{\n                    __html: `\n                        ${css}\n                        body { \n                            margin: 0; \n                            padding: 0; \n                            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', sans-serif;\n                            min-height: 100vh;\n                            display: flex;\n                            align-items: center;\n                            justify-content: center;\n                            background: #f5f5f5;\n                        }\n                        .flyer-container {\n                            width: 100%;\n                            max-width: 500px;\n                            margin: 1rem;\n                        }\n                        .powered-by {\n                            text-align: center;\n                            margin-top: 1rem;\n                            padding: 0.5rem;\n                            font-size: 0.75rem;\n                            color: #666;\n                            background: rgba(255,255,255,0.8);\n                            border-radius: 4px;\n                        }\n                        .powered-by a {\n                            color: #3b82f6;\n                            text-decoration: none;\n                        }\n                        .powered-by a:hover {\n                            text-decoration: underline;\n                        }\n                        .qr-code {\n                            display: block;\n                            margin: 1rem auto;\n                            max-width: 150px;\n                            height: auto;\n                        }\n                    `\n                }} />\n            </head>\n            <body>\n                <div className=\"flyer-container\">\n                    <div dangerouslySetInnerHTML={{ __html: html }} />\n                    <div className=\"powered-by\">\n                        Powered by <a href={process.env.NEXTAUTH_URL} target=\"_blank\" rel=\"noopener noreferrer\">InteractMe</a>\n                    </div>\n                </div>\n                {js && (\n                    <script dangerouslySetInnerHTML={{ __html: js }} />\n                )}\n            </body>\n        </html>\n    )\n} "],"names":[],"mappings":"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","debugId":null}}]
}