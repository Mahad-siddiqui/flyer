{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 74, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/DT/Documents/perfect/perfect/src/lib/prisma.ts"],"sourcesContent":["import { PrismaClient } from '@prisma/client'\n\nconst globalForPrisma = globalThis as unknown as {\n  prisma: PrismaClient | undefined\n}\n\nexport const prisma = globalForPrisma.prisma ?? new PrismaClient({\n  log: ['query'],\n})\n\nif (process.env.NODE_ENV !== 'production') globalForPrisma.prisma = prisma"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,kBAAkB;AAIjB,MAAM,SAAS,gBAAgB,MAAM,IAAI,IAAI,6HAAA,CAAA,eAAY,CAAC;IAC/D,KAAK;QAAC;KAAQ;AAChB;AAEA,wCAA2C,gBAAgB,MAAM,GAAG","debugId":null}},
    {"offset": {"line": 90, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/DT/Documents/perfect/perfect/src/app/api/templates/route.ts"],"sourcesContent":["// src/app/api/templates/route.ts\nimport { NextRequest, NextResponse } from \"next/server\";\nimport { prisma } from \"@/lib/prisma\";\n\nexport async function GET(request: NextRequest) {\n  try {\n    const { searchParams } = new URL(request.url);\n    const category = searchParams.get(\"category\");\n    const isPremium = searchParams.get(\"premium\");\n\n    const where: any = {\n      isActive: true,\n    };\n\n    if (category && category !== \"all\") {\n      where.category = category;\n    }\n\n    if (isPremium !== null) {\n      where.isPremium = isPremium === \"true\";\n    }\n\n    const templates = await prisma.template.findMany({\n      where,\n      orderBy: [\n        { isPremium: \"asc\" }, // Free templates first\n        { createdAt: \"desc\" },\n      ],\n      select: {\n        id: true,\n        name: true,\n        description: true,\n        category: true,\n        previewImage: true,\n        isPremium: true,\n        isActive: true,\n        createdAt: true,\n        updatedAt: true,\n      },\n    });\n\n    // Get template counts by category\n    const categoryCounts = await prisma.template.groupBy({\n      by: [\"category\"],\n      where: { isActive: true },\n      _count: {\n        id: true,\n      },\n    });\n\n    const totalCount = await prisma.template.count({\n      where: { isActive: true },\n    });\n\n    const premiumCount = await prisma.template.count({\n      where: { isActive: true, isPremium: true },\n    });\n\n    return NextResponse.json({\n      templates,\n      stats: {\n        total: totalCount,\n        premium: premiumCount,\n        free: totalCount - premiumCount,\n        categories: categoryCounts.reduce((acc, item) => {\n          acc[item.category] = item._count.id;\n          return acc;\n        }, {} as Record<string, number>),\n      },\n    });\n  } catch (error) {\n    console.error(\"Error fetching templates:\", error);\n    return NextResponse.json(\n      { error: \"Failed to fetch templates\" },\n      { status: 500 }\n    );\n  }\n}\n"],"names":[],"mappings":"AAAA,iCAAiC;;;;AACjC;AACA;;;AAEO,eAAe,IAAI,OAAoB;IAC5C,IAAI;QACF,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,QAAQ,GAAG;QAC5C,MAAM,WAAW,aAAa,GAAG,CAAC;QAClC,MAAM,YAAY,aAAa,GAAG,CAAC;QAEnC,MAAM,QAAa;YACjB,UAAU;QACZ;QAEA,IAAI,YAAY,aAAa,OAAO;YAClC,MAAM,QAAQ,GAAG;QACnB;QAEA,IAAI,cAAc,MAAM;YACtB,MAAM,SAAS,GAAG,cAAc;QAClC;QAEA,MAAM,YAAY,MAAM,sHAAA,CAAA,SAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC;YAC/C;YACA,SAAS;gBACP;oBAAE,WAAW;gBAAM;gBACnB;oBAAE,WAAW;gBAAO;aACrB;YACD,QAAQ;gBACN,IAAI;gBACJ,MAAM;gBACN,aAAa;gBACb,UAAU;gBACV,cAAc;gBACd,WAAW;gBACX,UAAU;gBACV,WAAW;gBACX,WAAW;YACb;QACF;QAEA,kCAAkC;QAClC,MAAM,iBAAiB,MAAM,sHAAA,CAAA,SAAM,CAAC,QAAQ,CAAC,OAAO,CAAC;YACnD,IAAI;gBAAC;aAAW;YAChB,OAAO;gBAAE,UAAU;YAAK;YACxB,QAAQ;gBACN,IAAI;YACN;QACF;QAEA,MAAM,aAAa,MAAM,sHAAA,CAAA,SAAM,CAAC,QAAQ,CAAC,KAAK,CAAC;YAC7C,OAAO;gBAAE,UAAU;YAAK;QAC1B;QAEA,MAAM,eAAe,MAAM,sHAAA,CAAA,SAAM,CAAC,QAAQ,CAAC,KAAK,CAAC;YAC/C,OAAO;gBAAE,UAAU;gBAAM,WAAW;YAAK;QAC3C;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB;YACA,OAAO;gBACL,OAAO;gBACP,SAAS;gBACT,MAAM,aAAa;gBACnB,YAAY,eAAe,MAAM,CAAC,CAAC,KAAK;oBACtC,GAAG,CAAC,KAAK,QAAQ,CAAC,GAAG,KAAK,MAAM,CAAC,EAAE;oBACnC,OAAO;gBACT,GAAG,CAAC;YACN;QACF;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA4B,GACrC;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}