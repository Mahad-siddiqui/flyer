{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 154, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/DT/Documents/perfect/perfect/src/lib/prisma.ts"],"sourcesContent":["import { PrismaClient } from '@prisma/client'\n\nconst globalForPrisma = globalThis as unknown as {\n  prisma: PrismaClient | undefined\n}\n\nexport const prisma = globalForPrisma.prisma ?? new PrismaClient({\n  log: ['query'],\n})\n\nif (process.env.NODE_ENV !== 'production') globalForPrisma.prisma = prisma"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,kBAAkB;AAIjB,MAAM,SAAS,gBAAgB,MAAM,IAAI,IAAI,6HAAA,CAAA,eAAY,CAAC;IAC/D,KAAK;QAAC;KAAQ;AAChB;AAEA,wCAA2C,gBAAgB,MAAM,GAAG","debugId":null}},
    {"offset": {"line": 170, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/DT/Documents/perfect/perfect/src/lib/auth.ts"],"sourcesContent":["import { NextAuthOptions } from \"next-auth\";\nimport { PrismaAdapter } from \"@next-auth/prisma-adapter\";\nimport GoogleProvider from \"next-auth/providers/google\";\nimport CredentialsProvider from \"next-auth/providers/credentials\";\nimport bcrypt from \"bcryptjs\";\nimport { prisma } from \"./prisma\";\n\nexport const authOptions: NextAuthOptions = {\n  adapter: PrismaAdapter(prisma),\n  providers: [\n    GoogleProvider({\n      clientId: process.env.GOOGLE_CLIENT_ID!,\n      clientSecret: process.env.GOOGLE_CLIENT_SECRET!,\n    }),\n    CredentialsProvider({\n      name: \"credentials\",\n      credentials: {\n        email: { label: \"Email\", type: \"email\" },\n        password: { label: \"Password\", type: \"password\" }\n      },\n      async authorize(credentials) {\n        if (!credentials?.email || !credentials?.password) {\n          return null;\n        }\n\n        const user = await prisma.user.findUnique({\n          where: { email: credentials.email },\n          include: {\n            plan: true,\n            _count: {\n              select: { flyers: true },\n            },\n          },\n        });\n\n        if (!user || !user.password) {\n          return null;\n        }\n\n        const isPasswordValid = await bcrypt.compare(\n          credentials.password,\n          user.password\n        );\n\n        if (!isPasswordValid) {\n          return null;\n        }\n\n        return {\n          id: user.id,\n          email: user.email,\n          name: user.name,\n          image: user.image,\n          planId: user.planId,\n          subscriptionStatus: user.subscriptionStatus,\n          flyersUsed: user.flyersUsed,\n          plan: user.plan,\n          flyerCount: user._count.flyers,\n        };\n      },\n    }),\n  ],\n  callbacks: {\n    async jwt({ token, user, account }) {\n      // Persist user data in JWT token\n      if (user) {\n        token.id = user.id;\n        token.planId = user.planId;\n        token.subscriptionStatus = user.subscriptionStatus;\n        token.flyersUsed = user.flyersUsed;\n        token.plan = user.plan;\n        token.flyerCount = user.flyerCount;\n      }\n      return token;\n    },\n    async session({ session, token }) {\n      // Send properties to the client\n      session.user = {\n        ...session.user,\n        id: token.id as string,\n        planId: token.planId as string,\n        subscriptionStatus: token.subscriptionStatus as string,\n        flyersUsed: token.flyersUsed as number,\n        plan: token.plan as any,\n        flyerCount: token.flyerCount as number,\n      };\n      return session;\n    },\n    async signIn({ user, account, profile }) {\n      try {\n        if (account?.provider === \"google\") {\n          const existingUser = await prisma.user.findUnique({\n            where: { email: user.email! },\n          });\n\n          if (!existingUser) {\n            // Create free plan for new users\n            const freePlan = await prisma.plan.findFirst({\n              where: { name: \"Free\" },\n            });\n\n            if (freePlan) {\n              await prisma.user.update({\n                where: { email: user.email! },\n                data: { planId: freePlan.id },\n              });\n            }\n          }\n        }\n        return true;\n      } catch (error) {\n        console.error(\"Error during sign in:\", error);\n        return false;\n      }\n    },\n  },\n  pages: {\n    signIn: \"/auth/signin\",\n    error: \"/auth/error\",\n  },\n  session: {\n    strategy: \"jwt\", // Changed from \"database\" to \"jwt\"\n    maxAge: 30 * 24 * 60 * 60, // 30 days\n  },\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 313, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/DT/Documents/perfect/perfect/src/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n\nexport function formatPrice(price: number) {\n  return new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n  }).format(price);\n}\n\nexport function formatDate(date: Date | string) {\n  return new Intl.DateTimeFormat(\"en-US\", {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n  }).format(new Date(date));\n}\n\nexport function formatBytes(bytes: number, decimals = 2) {\n  if (bytes === 0) return \"0 Bytes\";\n\n  const k = 1024;\n  const dm = decimals < 0 ? 0 : decimals;\n  const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\n\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + \" \" + sizes[i];\n}\n\nexport function slugify(text: string) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w\\-]+/g, \"\")\n    .replace(/\\-\\-+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function generateShortUrl(length = 8) {\n  const chars =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  let result = \"\";\n  for (let i = 0; i < length; i++) {\n    result += chars.charAt(Math.floor(Math.random() * chars.length));\n  }\n  return result;\n}\n\nexport function extractFlyerCategory(text: string): string {\n  const eventKeywords = [\n    \"event\",\n    \"party\",\n    \"conference\",\n    \"meeting\",\n    \"workshop\",\n    \"seminar\",\n    \"concert\",\n    \"festival\",\n  ];\n  const promoKeywords = [\n    \"sale\",\n    \"discount\",\n    \"offer\",\n    \"deal\",\n    \"promotion\",\n    \"coupon\",\n    \"special\",\n  ];\n  const jobKeywords = [\n    \"job\",\n    \"hiring\",\n    \"career\",\n    \"position\",\n    \"opportunity\",\n    \"employment\",\n    \"vacancy\",\n  ];\n  const newsletterKeywords = [\n    \"newsletter\",\n    \"update\",\n    \"news\",\n    \"announcement\",\n    \"bulletin\",\n  ];\n\n  const lowerText = text.toLowerCase();\n\n  if (eventKeywords.some((keyword) => lowerText.includes(keyword))) {\n    return \"Event\";\n  } else if (promoKeywords.some((keyword) => lowerText.includes(keyword))) {\n    return \"Promo\";\n  } else if (jobKeywords.some((keyword) => lowerText.includes(keyword))) {\n    return \"Job\";\n  } else if (\n    newsletterKeywords.some((keyword) => lowerText.includes(keyword))\n  ) {\n    return \"Newsletter\";\n  }\n\n  return \"Event\"; // default\n}\n\nexport function truncateText(text: string, maxLength: number) {\n  if (text.length <= maxLength) return text;\n  return text.substring(0, maxLength) + \"...\";\n}\n\nexport function isValidEmail(email: string) {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return emailRegex.test(email);\n}\n\nexport function isValidUrl(url: string) {\n  try {\n    new URL(url);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nexport function debounce<T extends (...args: any[]) => void>(\n  func: T,\n  delay: number\n): (...args: Parameters<T>) => void {\n  let timeoutId: NodeJS.Timeout;\n  return (...args: Parameters<T>) => {\n    clearTimeout(timeoutId);\n    timeoutId = setTimeout(() => func(...args), delay);\n  };\n}\n\nexport function formatFileSize(bytes: number): string {\n  if (bytes === 0) return '0 Bytes'\n  \n  const k = 1024\n  const sizes = ['Bytes', 'KB', 'MB', 'GB']\n  const i = Math.floor(Math.log(bytes) / Math.log(k))\n  \n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i]\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 463, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/DT/Documents/perfect/perfect/src/lib/gemini.ts"],"sourcesContent":["import { GoogleGenerativeAI } from \"@google/generative-ai\";\nimport { extractFlyerCategory } from \"./utils\";\n\nconst genAI = new GoogleGenerativeAI(process.env.GEMINI_API_KEY!);\n\nexport interface ExtractedFlyerData {\n  title: string;\n  description: string;\n  date?: string;\n  time?: string;\n  location?: string;\n  address?: string;\n  contact?: {\n    email?: string;\n    phone?: string;\n    website?: string;\n  };\n  socialLinks?: {\n    facebook?: string;\n    twitter?: string;\n    instagram?: string;\n    linkedin?: string;\n  };\n  ctaButtons?: {\n    primary?: { text: string; action: string };\n    secondary?: { text: string; action: string };\n  };\n  images?: string[];\n  category?: string;\n  price?: string;\n  organizer?: string;\n  tags?: string[];\n}\n\nexport async function extractFlyerData(\n  imageBuffer: Buffer,\n  mimeType: string\n): Promise<ExtractedFlyerData> {\n  try {\n    const model = genAI.getGenerativeModel({ model: \"gemini-2.0-flash\" });\n\n    const prompt = `\n      Analyze this flyer image and extract all relevant information in a structured format. \n      Please provide the following information if available:\n      \n      1. Title/Headline\n      2. Description/Details\n      3. Date and Time\n      4. Location/Address\n      5. Contact information (email, phone, website)\n      6. Social media links\n      7. Call-to-action buttons or instructions\n      8. Price information\n      9. Organizer/Company name\n      10. Any other relevant details\n      \n      Format the response as a JSON object with clear field names.\n      If information is not available, use null for that field.\n      \n      For call-to-action buttons, suggest appropriate actions like:\n      - \"RSVP\" for events\n      - \"Buy Now\" for products\n      - \"Apply Now\" for jobs\n      - \"Learn More\" for general information\n      - \"Contact Us\" for contact\n      \n      Also categorize this flyer as one of: Event, Promo, Job, Newsletter\n    `;\n\n    const imagePart = {\n      inlineData: {\n        data: imageBuffer.toString(\"base64\"),\n        mimeType,\n      },\n    };\n\n    const result = await model.generateContent([prompt, imagePart]);\n    const response = await result.response;\n    const text = response.text();\n\n    // Try to parse JSON from the response\n    let extractedData: ExtractedFlyerData;\n    try {\n      // Clean the response text to extract JSON\n      const jsonMatch = text.match(/\\{[\\s\\S]*\\}/);\n      if (jsonMatch) {\n        extractedData = JSON.parse(jsonMatch[0]);\n      } else {\n        throw new Error(\"No JSON found in response\");\n      }\n    } catch (parseError) {\n      console.error(\"Error parsing Gemini response:\", parseError);\n      // Fallback to basic extraction\n      extractedData = {\n        title: \"Extracted Flyer\",\n        description: text.substring(0, 200) + \"...\",\n        category: \"Event\",\n      };\n    }\n\n    // Auto-categorize if not provided\n    if (!extractedData.category) {\n      const fullText = `${extractedData.title} ${extractedData.description}`;\n      extractedData.category = extractFlyerCategory(fullText);\n    }\n\n    // Set default CTA buttons based on category\n    if (!extractedData.ctaButtons) {\n      extractedData.ctaButtons = getDefaultCTAButtons(extractedData.category);\n    }\n\n    return extractedData;\n  } catch (error) {\n    console.error(\"Error extracting flyer data:\", error);\n    throw new Error(\"Failed to extract flyer data\");\n  }\n}\n\nfunction getDefaultCTAButtons(category?: string) {\n  switch (category) {\n    case \"Event\":\n      return {\n        primary: { text: \"RSVP\", action: \"rsvp\" },\n        secondary: { text: \"Learn More\", action: \"info\" },\n      };\n    case \"Promo\":\n      return {\n        primary: { text: \"Buy Now\", action: \"buy\" },\n        secondary: { text: \"View Details\", action: \"details\" },\n      };\n    case \"Job\":\n      return {\n        primary: { text: \"Apply Now\", action: \"apply\" },\n        secondary: { text: \"Learn More\", action: \"info\" },\n      };\n    case \"Newsletter\":\n      return {\n        primary: { text: \"Subscribe\", action: \"subscribe\" },\n        secondary: { text: \"Read More\", action: \"read\" },\n      };\n    default:\n      return {\n        primary: { text: \"Contact Us\", action: \"contact\" },\n        secondary: { text: \"Learn More\", action: \"info\" },\n      };\n  }\n}\n\nexport async function generateFlyerSummary(\n  extractedData: ExtractedFlyerData\n): Promise<string> {\n  try {\n    const model = genAI.getGenerativeModel({ model: \"gemini-pro\" });\n\n    const prompt = `\n      Create a concise, engaging summary for a flyer based on this extracted data:\n      ${JSON.stringify(extractedData, null, 2)}\n      \n      The summary should be:\n      - 1-2 sentences maximum\n      - Highlight the most important information\n      - Be engaging and action-oriented\n      - Include date/time and location if available\n    `;\n\n    const result = await model.generateContent(prompt);\n    const response = await result.response;\n    return response.text().trim();\n  } catch (error) {\n    console.error(\"Error generating flyer summary:\", error);\n    return (\n      extractedData.description || \"Check out this flyer for more details!\"\n    );\n  }\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEA,MAAM,QAAQ,IAAI,gKAAA,CAAA,qBAAkB,CAAC,QAAQ,GAAG,CAAC,cAAc;AA+BxD,eAAe,iBACpB,WAAmB,EACnB,QAAgB;IAEhB,IAAI;QACF,MAAM,QAAQ,MAAM,kBAAkB,CAAC;YAAE,OAAO;QAAmB;QAEnE,MAAM,SAAS,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;IA0BhB,CAAC;QAED,MAAM,YAAY;YAChB,YAAY;gBACV,MAAM,YAAY,QAAQ,CAAC;gBAC3B;YACF;QACF;QAEA,MAAM,SAAS,MAAM,MAAM,eAAe,CAAC;YAAC;YAAQ;SAAU;QAC9D,MAAM,WAAW,MAAM,OAAO,QAAQ;QACtC,MAAM,OAAO,SAAS,IAAI;QAE1B,sCAAsC;QACtC,IAAI;QACJ,IAAI;YACF,0CAA0C;YAC1C,MAAM,YAAY,KAAK,KAAK,CAAC;YAC7B,IAAI,WAAW;gBACb,gBAAgB,KAAK,KAAK,CAAC,SAAS,CAAC,EAAE;YACzC,OAAO;gBACL,MAAM,IAAI,MAAM;YAClB;QACF,EAAE,OAAO,YAAY;YACnB,QAAQ,KAAK,CAAC,kCAAkC;YAChD,+BAA+B;YAC/B,gBAAgB;gBACd,OAAO;gBACP,aAAa,KAAK,SAAS,CAAC,GAAG,OAAO;gBACtC,UAAU;YACZ;QACF;QAEA,kCAAkC;QAClC,IAAI,CAAC,cAAc,QAAQ,EAAE;YAC3B,MAAM,WAAW,GAAG,cAAc,KAAK,CAAC,CAAC,EAAE,cAAc,WAAW,EAAE;YACtE,cAAc,QAAQ,GAAG,CAAA,GAAA,qHAAA,CAAA,uBAAoB,AAAD,EAAE;QAChD;QAEA,4CAA4C;QAC5C,IAAI,CAAC,cAAc,UAAU,EAAE;YAC7B,cAAc,UAAU,GAAG,qBAAqB,cAAc,QAAQ;QACxE;QAEA,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,gCAAgC;QAC9C,MAAM,IAAI,MAAM;IAClB;AACF;AAEA,SAAS,qBAAqB,QAAiB;IAC7C,OAAQ;QACN,KAAK;YACH,OAAO;gBACL,SAAS;oBAAE,MAAM;oBAAQ,QAAQ;gBAAO;gBACxC,WAAW;oBAAE,MAAM;oBAAc,QAAQ;gBAAO;YAClD;QACF,KAAK;YACH,OAAO;gBACL,SAAS;oBAAE,MAAM;oBAAW,QAAQ;gBAAM;gBAC1C,WAAW;oBAAE,MAAM;oBAAgB,QAAQ;gBAAU;YACvD;QACF,KAAK;YACH,OAAO;gBACL,SAAS;oBAAE,MAAM;oBAAa,QAAQ;gBAAQ;gBAC9C,WAAW;oBAAE,MAAM;oBAAc,QAAQ;gBAAO;YAClD;QACF,KAAK;YACH,OAAO;gBACL,SAAS;oBAAE,MAAM;oBAAa,QAAQ;gBAAY;gBAClD,WAAW;oBAAE,MAAM;oBAAa,QAAQ;gBAAO;YACjD;QACF;YACE,OAAO;gBACL,SAAS;oBAAE,MAAM;oBAAc,QAAQ;gBAAU;gBACjD,WAAW;oBAAE,MAAM;oBAAc,QAAQ;gBAAO;YAClD;IACJ;AACF;AAEO,eAAe,qBACpB,aAAiC;IAEjC,IAAI;QACF,MAAM,QAAQ,MAAM,kBAAkB,CAAC;YAAE,OAAO;QAAa;QAE7D,MAAM,SAAS,CAAC;;MAEd,EAAE,KAAK,SAAS,CAAC,eAAe,MAAM,GAAG;;;;;;;IAO3C,CAAC;QAED,MAAM,SAAS,MAAM,MAAM,eAAe,CAAC;QAC3C,MAAM,WAAW,MAAM,OAAO,QAAQ;QACtC,OAAO,SAAS,IAAI,GAAG,IAAI;IAC7B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,mCAAmC;QACjD,OACE,cAAc,WAAW,IAAI;IAEjC;AACF","debugId":null}},
    {"offset": {"line": 652, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/DT/Documents/perfect/perfect/src/app/api/upload/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\nimport { getServerSession } from \"next-auth\";\nimport { authOptions } from \"@/lib/auth\";\nimport { extractFlyerData } from \"@/lib/gemini\";\nimport { writeFile, mkdir } from \"fs/promises\";\nimport { join } from \"path\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport async function POST(request: NextRequest) {\n  try {\n    const session = await getServerSession(authOptions);\n\n    if (!session?.user?.id) {\n      return NextResponse.json({ error: \"Unauthorized\" }, { status: 401 });\n    }\n\n    const formData = await request.formData();\n    const file = formData.get(\"file\") as File;\n\n    if (!file) {\n      return NextResponse.json({ error: \"No file provided\" }, { status: 400 });\n    }\n\n    // Validate file type\n    const allowedTypes = [\n      \"image/jpeg\",\n      \"image/png\",\n      \"image/gif\",\n      \"application/pdf\",\n    ];\n    if (!allowedTypes.includes(file.type)) {\n      return NextResponse.json({ error: \"Invalid file type\" }, { status: 400 });\n    }\n\n    // Validate file size (10MB limit)\n    const maxSize = 10 * 1024 * 1024;\n    if (file.size > maxSize) {\n      return NextResponse.json({ error: \"File too large\" }, { status: 400 });\n    }\n\n    // Generate unique filename\n    const fileId = uuidv4();\n    const extension = file.name.split(\".\").pop();\n    const filename = `${fileId}.${extension}`;\n\n    // Create upload directory if it doesn't exist\n    const uploadDir = join(process.cwd(), \"public\", \"uploads\");\n    await mkdir(uploadDir, { recursive: true });\n\n    // Save file to disk\n    const filePath = join(uploadDir, filename);\n    const buffer = await file.arrayBuffer();\n    await writeFile(filePath, Buffer.from(buffer));\n\n    // Extract data using Gemini AI\n    let extractedData;\n    try {\n      extractedData = await extractFlyerData(Buffer.from(buffer), file.type);\n    } catch (error) {\n      console.error(\"AI extraction error:\", error);\n      // Fallback to basic data if AI fails\n      extractedData = {\n        title: file.name.replace(/\\.[^/.]+$/, \"\"), // Remove extension\n        description: \"AI extraction failed. Please edit manually.\",\n        category: \"Event\",\n        ctaButtons: {\n          primary: { text: \"Contact Us\", action: \"contact\" },\n          secondary: { text: \"Learn More\", action: \"info\" },\n        },\n      };\n    }\n\n    const responseData = {\n      filePath: `/uploads/${filename}`,\n      extractedData,\n      fileInfo: {\n        originalName: file.name,\n        size: file.size,\n        type: file.type,\n      },\n    };\n\n    return NextResponse.json(responseData);\n  } catch (error) {\n    console.error(\"Upload error:\", error);\n    return NextResponse.json({ error: \"Upload failed\" }, { status: 500 });\n  }\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAEO,eAAe,KAAK,OAAoB;IAC7C,IAAI;QACF,MAAM,UAAU,MAAM,CAAA,GAAA,uIAAA,CAAA,mBAAgB,AAAD,EAAE,oHAAA,CAAA,cAAW;QAElD,IAAI,CAAC,SAAS,MAAM,IAAI;YACtB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAe,GAAG;gBAAE,QAAQ;YAAI;QACpE;QAEA,MAAM,WAAW,MAAM,QAAQ,QAAQ;QACvC,MAAM,OAAO,SAAS,GAAG,CAAC;QAE1B,IAAI,CAAC,MAAM;YACT,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAmB,GAAG;gBAAE,QAAQ;YAAI;QACxE;QAEA,qBAAqB;QACrB,MAAM,eAAe;YACnB;YACA;YACA;YACA;SACD;QACD,IAAI,CAAC,aAAa,QAAQ,CAAC,KAAK,IAAI,GAAG;YACrC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAoB,GAAG;gBAAE,QAAQ;YAAI;QACzE;QAEA,kCAAkC;QAClC,MAAM,UAAU,KAAK,OAAO;QAC5B,IAAI,KAAK,IAAI,GAAG,SAAS;YACvB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAiB,GAAG;gBAAE,QAAQ;YAAI;QACtE;QAEA,2BAA2B;QAC3B,MAAM,SAAS,CAAA,GAAA,4KAAA,CAAA,KAAM,AAAD;QACpB,MAAM,YAAY,KAAK,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG;QAC1C,MAAM,WAAW,GAAG,OAAO,CAAC,EAAE,WAAW;QAEzC,8CAA8C;QAC9C,MAAM,YAAY,CAAA,GAAA,iGAAA,CAAA,OAAI,AAAD,EAAE,QAAQ,GAAG,IAAI,UAAU;QAChD,MAAM,CAAA,GAAA,qHAAA,CAAA,QAAK,AAAD,EAAE,WAAW;YAAE,WAAW;QAAK;QAEzC,oBAAoB;QACpB,MAAM,WAAW,CAAA,GAAA,iGAAA,CAAA,OAAI,AAAD,EAAE,WAAW;QACjC,MAAM,SAAS,MAAM,KAAK,WAAW;QACrC,MAAM,CAAA,GAAA,qHAAA,CAAA,YAAS,AAAD,EAAE,UAAU,OAAO,IAAI,CAAC;QAEtC,+BAA+B;QAC/B,IAAI;QACJ,IAAI;YACF,gBAAgB,MAAM,CAAA,GAAA,sHAAA,CAAA,mBAAgB,AAAD,EAAE,OAAO,IAAI,CAAC,SAAS,KAAK,IAAI;QACvE,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,wBAAwB;YACtC,qCAAqC;YACrC,gBAAgB;gBACd,OAAO,KAAK,IAAI,CAAC,OAAO,CAAC,aAAa;gBACtC,aAAa;gBACb,UAAU;gBACV,YAAY;oBACV,SAAS;wBAAE,MAAM;wBAAc,QAAQ;oBAAU;oBACjD,WAAW;wBAAE,MAAM;wBAAc,QAAQ;oBAAO;gBAClD;YACF;QACF;QAEA,MAAM,eAAe;YACnB,UAAU,CAAC,SAAS,EAAE,UAAU;YAChC;YACA,UAAU;gBACR,cAAc,KAAK,IAAI;gBACvB,MAAM,KAAK,IAAI;gBACf,MAAM,KAAK,IAAI;YACjB;QACF;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,iBAAiB;QAC/B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAgB,GAAG;YAAE,QAAQ;QAAI;IACrE;AACF","debugId":null}}]
}